{"remainingRequest":"/Users/thuybui/Documents/Workplace/snowcoop-app/node_modules/babel-loader/lib/index.js!/Users/thuybui/Documents/Workplace/snowcoop-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/thuybui/Documents/Workplace/snowcoop-app/src/components/pages/login-page/login-page.component.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thuybui/Documents/Workplace/snowcoop-app/src/components/pages/login-page/login-page.component.js","mtime":1552106418790},{"path":"/Users/thuybui/Documents/Workplace/snowcoop-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thuybui/Documents/Workplace/snowcoop-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/thuybui/Documents/Workplace/snowcoop-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  name: 'loginPage',\n  components: {},\n  data: function data() {\n    return {\n      formData: {\n        email: null,\n        password: null\n      },\n      rules: {\n        email: [{\n          required: true,\n          message: 'Please input email address',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Please input correct email address',\n          trigger: ['blur', 'change']\n        }],\n        password: [{\n          required: true,\n          message: 'Please input password',\n          trigger: 'blur'\n        }]\n      },\n      isFormValidated: false\n    };\n  },\n  methods: {\n    updateIsFormValidated: function updateIsFormValidated() {\n      var fields = this.$refs.formData.fields;\n      this.isFormValidated = fields.reduce(function (acc, field) {\n        var valid = field.isRequired && field.validateState === 'success';\n        var noError = !field.isRequired && field.validateState !== 'error';\n        return acc && (valid || noError);\n      }, true);\n    },\n    signIn: function signIn() {\n      var _this = this;\n\n      if (this.isFormValidated) {\n        var credentials = {\n          email: this.formData.email,\n          password: this.formData.password\n        };\n        this.$store.dispatch('LOG_IN', credentials).then(function (user) {\n          return _this.onLoginSuccessful(user);\n        }, function (error) {\n          return _this.onLoginFailed(error);\n        });\n      }\n    },\n    onLoginSuccessful: function onLoginSuccessful(user) {\n      if (!user) {\n        throw new Error('Something went wrong!');\n      }\n\n      this.$router.push('/dashboard');\n    },\n    onLoginFailed: function onLoginFailed(error) {\n      /* eslint-disable */\n      console.error(error);\n    }\n  }\n};",{"version":3,"sources":["/Users/thuybui/Documents/Workplace/snowcoop-app/src/components/pages/login-page/login-page.component.js"],"names":["name","components","data","formData","email","password","rules","required","message","trigger","type","isFormValidated","methods","updateIsFormValidated","fields","$refs","reduce","acc","field","valid","isRequired","validateState","noError","signIn","credentials","$store","dispatch","then","user","onLoginSuccessful","error","onLoginFailed","Error","$router","push","console"],"mappings":"AAAA,eAAe;AACbA,EAAAA,IAAI,EAAE,WADO;AAEbC,EAAAA,UAAU,EAAE,EAFC;AAGbC,EAAAA,IAHa,kBAGL;AACN,WAAO;AACLC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,IADC;AAERC,QAAAA,QAAQ,EAAE;AAFF,OADL;AAKLC,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE,CACL;AAAEG,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE,4BAA3B;AAAyDC,UAAAA,OAAO,EAAE;AAAlE,SADK,EAEL;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBF,UAAAA,OAAO,EAAE,oCAA1B;AAAgEC,UAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT;AAAzE,SAFK,CADF;AAKLJ,QAAAA,QAAQ,EAAE,CACR;AAAEE,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE,uBAA3B;AAAoDC,UAAAA,OAAO,EAAE;AAA7D,SADQ;AALL,OALF;AAcLE,MAAAA,eAAe,EAAE;AAdZ,KAAP;AAgBD,GApBY;AAqBbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,qBADO,mCACkB;AACvB,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWZ,QAAX,CAAoBW,MAAnC;AACA,WAAKH,eAAL,GAAuBG,MAAM,CAACE,MAAP,CAAc,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACnD,YAAMC,KAAK,GAAID,KAAK,CAACE,UAAN,IAAoBF,KAAK,CAACG,aAAN,KAAwB,SAA3D;AACA,YAAMC,OAAO,GAAI,CAACJ,KAAK,CAACE,UAAP,IAAqBF,KAAK,CAACG,aAAN,KAAwB,OAA9D;AACA,eAAOJ,GAAG,KAAKE,KAAK,IAAIG,OAAd,CAAV;AACD,OAJsB,EAIpB,IAJoB,CAAvB;AAKD,KARM;AASPC,IAAAA,MATO,oBASG;AAAA;;AACR,UAAI,KAAKZ,eAAT,EAA0B;AACxB,YAAMa,WAAW,GAAG;AAClBpB,UAAAA,KAAK,EAAE,KAAKD,QAAL,CAAcC,KADH;AAElBC,UAAAA,QAAQ,EAAE,KAAKF,QAAL,CAAcE;AAFN,SAApB;AAIA,aAAKoB,MAAL,CAAYC,QAAZ,CAAqB,QAArB,EAA+BF,WAA/B,EAA4CG,IAA5C,CACE,UAACC,IAAD;AAAA,iBAAU,KAAI,CAACC,iBAAL,CAAuBD,IAAvB,CAAV;AAAA,SADF,EAEE,UAACE,KAAD;AAAA,iBAAW,KAAI,CAACC,aAAL,CAAmBD,KAAnB,CAAX;AAAA,SAFF;AAID;AACF,KApBM;AAqBPD,IAAAA,iBArBO,6BAqBYD,IArBZ,EAqBkB;AACvB,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAII,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,WAAKC,OAAL,CAAaC,IAAb,CAAkB,YAAlB;AACD,KA3BM;AA6BPH,IAAAA,aA7BO,yBA6BQD,KA7BR,EA6Be;AACpB;AACAK,MAAAA,OAAO,CAACL,KAAR,CAAcA,KAAd;AACD;AAhCM;AArBI,CAAf","sourcesContent":["export default {\n  name: 'loginPage',\n  components: {},\n  data () {\n    return {\n      formData: {\n        email: null,\n        password: null\n      },\n      rules: {\n        email: [\n          { required: true, message: 'Please input email address', trigger: 'blur' },\n          { type: 'email', message: 'Please input correct email address', trigger: ['blur', 'change'] }\n        ],\n        password: [\n          { required: true, message: 'Please input password', trigger: 'blur' }\n        ]\n      },\n      isFormValidated: false\n    }\n  },\n  methods: {\n    updateIsFormValidated () {\n      const fields = this.$refs.formData.fields\n      this.isFormValidated = fields.reduce((acc, field) => {\n        const valid = (field.isRequired && field.validateState === 'success')\n        const noError = (!field.isRequired && field.validateState !== 'error')\n        return acc && (valid || noError)\n      }, true)\n    },\n    signIn () {\n      if (this.isFormValidated) {\n        const credentials = {\n          email: this.formData.email,\n          password: this.formData.password\n        }\n        this.$store.dispatch('LOG_IN', credentials).then(\n          (user) => this.onLoginSuccessful(user),\n          (error) => this.onLoginFailed(error)\n        )\n      }\n    },\n    onLoginSuccessful (user) {\n      if (!user) {\n        throw new Error('Something went wrong!')\n      }\n\n      this.$router.push('/dashboard')\n    },\n\n    onLoginFailed (error) {\n      /* eslint-disable */\n      console.error(error);\n    },\n  }\n};\n"]}]}